services:
  redis:
    profiles:
    - infra
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - paydash-network

  kafka:
    profiles:
    - infra
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - paydash-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    profiles:
    - infra
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    networks:
      - paydash-network


  kafka-ui:
    container_name: kafka-ui
    profiles:
    - infra    
    image: provectuslabs/kafka-ui:latest
    ports:
      - 3090:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kui.yaml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - paydash-network

  cassandra:
    image: cassandra:4.1
    profiles:
    - infra
    hostname: cassandra
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: paydash-cluster
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128
      MAX_HEAP_SIZE: 1G
      HEAP_NEWSIZE: 200M
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SELECT now() FROM system.local'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    restart: unless-stopped
    networks:
      - paydash-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    profiles:
      - infra
    container_name: clickhouse
    ports:
      - "8123:8123"    # HTTP interface
      - "9000:9000"    # Native interface
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./config/clickhouse/:/etc/clickhouse-server/config.d/
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - paydash-network
    restart: unless-stopped

  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    profiles:
    - infra
    container_name: kafka-init
    depends_on:
      zookeeper:
        condition: service_started
      kafka:
        condition: service_healthy
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      # Wait for Kafka to be ready
      sleep 10
      
      # Create topics
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic batch-events --partitions 3 --replication-factor 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic audit-events --partitions 3 --replication-factor 1
      
      # List topics to verify
      kafka-topics --bootstrap-server kafka:29092 --list
      "
    restart: "no"
    networks:
      - paydash-network

  clickhouse-init:
    image: clickhouse/clickhouse-client:latest
    profiles:
      - infra
    container_name: clickhouse-init
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./config/clickhouse/init-schema.sql:/init-schema.sql
    entrypoint: ['/bin/sh', '-c']
    command: |
      "
      # Wait for ClickHouse to be ready
      sleep 10
      
      # Initialize schema
      clickhouse-client --host clickhouse --port 9000 --queries-file /init-schema.sql
      
      echo 'ClickHouse schema initialized successfully'
      "
    restart: "no"
    networks:
      - paydash-network




networks:
  paydash-network:
    driver: bridge

volumes:
  redis_data:
  kafka_data:
  cassandra_data:
  clickhouse_data:
